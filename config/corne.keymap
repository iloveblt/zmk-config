/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        macro01: macro01 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp O &kp N &kp A &kp M &kp O &kp O &kp N3 &kp G &kp U &kp R &kp U &kp ENTER>;
            label = "MACRO01";
        };

        macro02: macro02 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp O &kp N &kp A &kp M &kp O &kp O &kp N1 &kp G &kp U &kp R &kp U>;
            label = "MACRO02";
        };

        macro03: macro03 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp A &kp G &kp U &kp R &kp I &kp N1 &kp N8 &kp N1 &kp N2 &kp POUND>;
            label = "MACRO03";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q    &kp W    &kp E     &kp R         &kp T                     &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp CAPSLOCK  &kp A    &kp S    &kp D     &kp F         &kp G                     &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &lt 4 Z  &lt 5 X  &kp C     &kp V         &kp B                     &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT ENTER
                                &kp LALT  &kp LEFT_GUI  &mt LEFT_CONTROL SPACE    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB          &kp PLUS    &kp N9  &kp NUMBER_8  &kp N7  &kp EQUAL       &kp TILDE        &kp UNDERSCORE  &kp UP      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&kp ESC          &kp MINUS   &kp N6  &kp N5        &kp N4  &kp ASTERISK    &kp EXCLAMATION  &kp LEFT        &kp DOWN    &kp RIGHT             &kp BACKSLASH          &kp PIPE
&mt LSHFT ENTER  &kp PERIOD  &kp N3  &kp NUMBER_2  &kp N1  &kp SLASH       &kp AT           &kp HASH        &kp DOLLAR  &kp PERCENT           &kp CARET              &kp AMPERSAND
                                     &kp N0        &kp N0  &trans          &trans           &trans          &mo 3
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none    &kp F1  &kp F2                &kp F3          &kp F4        &kp F5     &none   &none       &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp DELETE
&kp ESC  &kp F6  &kp F7                &kp F8          &kp F9        &kp F10    &none   &none       &none         &kp LG(LC(L))      &none            &none
&none    &none   &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))  &kp F11       &kp F12    &none   &kp LC(UP)  &kp LC(LEFT)  &kp LC(RIGHT)      &kp LC(DOWN)     &kp ENTER
                                       &kp RALT        &kp LEFT_GUI  &trans     &trans  &mo 3       &trans
            >;
        };

        layer_3 {
            bindings = <
&none       &macro01      &macro02      &macro03      &none         &none           &none   &none  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none  &none       &none              &none            &none
&none       &none         &none         &none         &none         &none           &none   &none  &none       &none              &none            &none
                                        &none         &none         &trans          &trans  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp TAB  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH       &kp EQUAL     &kp N7  &kp N8  &kp N9  &kp PLUS    &kp BACKSPACE
&none    &kp BACKSLASH     &kp PIPE           &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR     &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp MINUS   &none
&none    &none             &none              &kp LESS_THAN         &kp GREATER_THAN       &kp PERCENT    &kp SLASH     &kp N1  &kp N2  &kp N3  &kp PERIOD  &kp ENTER
                                              &none                 &none                  &trans         &trans        &kp N0  &kp N0
            >;
        };

        layer_5 {
            bindings = <
&none  &none  &none  &none  &none  &none     &kp INS  &kp HOME  &kp UP    &kp END    &kp PG_UP  &none
&none  &none  &none  &none  &none  &none     &kp DEL  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &none
&none  &none  &none  &none  &none  &none     &none    &none     &none     &none      &none      &none
                     &none  &none  &trans    &trans   &none     &none
            >;
        };
    };
};
